RouterPool{
    akka.actor.deployment{
    /round-robin-dispatch/random-router-pool{
            router = random-pool
            nr-of-instances = 5
        }
    }
}


RoundRobinGroup{
akka {
actor {
    provider = "akka.remote.RemoteActorRefProvider"
    deployment{
            /round-robin-group-dispatch/remote-round-robin{
                    router = round-robin-group
                    routees.paths = ["akka.tcp://remote-system-1@10.248.66.127:13782/user/remote-worker-1",
                                    "akka.tcp://remote-system@10.248.66.70:13782/user/remote-worker"]
            }
        }
 }
remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
        hostname = 10.248.66.70
        port = 47576
        }
    }
  }
}


RemoteListener{
akka {
actor {
    provider = "akka.remote.RemoteActorRefProvider"
 }
remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
        hostname = 10.248.66.68
        port = 37719
       }
    }
  }
}

RemoteListener1{
akka {
actor {
    provider = "akka.remote.RemoteActorRefProvider"
 }
remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
        hostname = 10.248.66.127
        port = 47576
        }
    }
  }
}

RemoteLookupListener{
akka {
actor {
    provider = "akka.remote.RemoteActorRefProvider"
 }
remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
        hostname = 10.248.66.127
        port = 47576
       }
    }
  }
}


RemoteCreateListener{
akka {
actor {
    provider = "akka.remote.RemoteActorRefProvider"
    deployment{
        /remote-worker-create{
            remote = "akka.tcp://remote-system@127.0.0.1:1550"
        }
    }
 }
remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
        hostname = "127.0.0.1"
        port = 1558
        }
    }
  }
}


FrontEndCluster{
akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = 10.248.66.70
      port = 47576
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://transform-system@10.248.66.127:47576"
      ]
      roles = ["frontend"]
    auto-down-unreachable-after = 10s
  }
    log-dead-letters = 1
    log-dead-letters-during-shutdown = on
}

akka.cluster.metrics.enabled=off
akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native
}

BackEndCluster{
akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = 0
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://transform-system@10.248.66.127:47576"
      ]
      roles = ["backend"]
    auto-down-unreachable-after = 10s
  }
      log-dead-letters = 1
      log-dead-letters-during-shutdown = on
}

akka.cluster.metrics.enabled=off
akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native
}

SeedNodeCluster{
akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = 10.248.66.129
      port = 0
    }
  }

  cluster {
    roles = ["seednode"]
    seed-nodes = [
          "akka.tcp://transform-system@10.248.66.127:47576"
          ]
    auto-down-unreachable-after = 10s
  }
      log-dead-letters = 1
      log-dead-letters-during-shutdown = on
}

akka.cluster.metrics.enabled=off
akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native
}